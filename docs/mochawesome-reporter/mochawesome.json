{
  "stats": {
    "suites": 2,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2018-12-22T08:56:30.264Z",
    "end": "2018-12-22T08:56:31.062Z",
    "duration": 798,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "dc2bb457-d22b-42a7-b4f1-da255e4d255e",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "952ae603-b4d4-49b2-9c61-1902f4ab19a8",
        "title": "YII后台接口",
        "fullFile": "D:\\myphp_www\\PHPTutorial\\WWW\\nodejs\\dist\\service\\router.spec.js",
        "file": "\\dist\\service\\router.spec.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "index 接口-所有数据",
            "fullTitle": "YII后台接口 index 接口-所有数据",
            "timedOut": false,
            "duration": 246,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "request.get('/').expect(200).end(function (err, res) {\n  if (err) return done(err);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "e608633b-97f8-4947-a0c0-baf44617b932",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "createjson 接口-创建操作",
            "fullTitle": "YII后台接口 createjson 接口-创建操作",
            "timedOut": false,
            "duration": 179,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "//请求页面地址\nrequest.post('/create').send({\n  \"book_name\": '测试书籍',\n  \"author\": '左右',\n  \"book_img\": 'http://www.baiddu.com/1.jpg'\n}) //发送数据,可以是对象方式\n.set('Content-Type', 'application/json;charset=utf-8')\n// .expect('Content-Type', /json/) // 判断响应头字段\n.expect(200) // 断言判断如果返回状态码是200\n.end(function (err, res) {\n  // 结束测试用例\n  if (err) return done(err); //如果有错误返回错误,否则正常done\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "a3bfc8f3-4973-4a1a-a94f-c8b2b8654c06",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "updatejson 接口-更新操作",
            "fullTitle": "YII后台接口 updatejson 接口-更新操作",
            "timedOut": false,
            "duration": 193,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "let newData = {\n  id: '11',\n  book_name: '测试书籍' + Math.floor(Math.random() * 10),\n  author: '左右2',\n  book_img: 'http://www.baiddu.com/2.jpg'\n};\n//请求页面地址\nrequest.post('/update').send(newData) //发送数据,可以是对象方式\n.set('Content-Type', 'application/json;charset=utf-8') // 设置请求报头\n// .expect('Content-Type', /json/) // 判断响应头字段\n.expect(200) // 断言判断如果返回状态码是200\n.end(function (err, res) {\n  // 结束测试用例\n  if (err) return done(err); //如果有错误返回错误,否则正常done\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "076d21a8-5349-453a-97e1-a5f0f974d8d3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "view 接口-查看单个数据",
            "fullTitle": "YII后台接口 view 接口-查看单个数据",
            "timedOut": false,
            "duration": 157,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "request.get('/view/11').set('Content-Type', 'application/json; charset=UTF-8') // 判断响应头字段\n.expect(200).end(function (err, res) {\n  if (err) return done(err);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "cf6f58cd-5a20-4882-9077-d832d73f274f",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "e608633b-97f8-4947-a0c0-baf44617b932",
          "a3bfc8f3-4973-4a1a-a94f-c8b2b8654c06",
          "076d21a8-5349-453a-97e1-a5f0f974d8d3",
          "cf6f58cd-5a20-4882-9077-d832d73f274f"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 775,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "7947c9a7-a3ec-4e54-bcdc-97e7870dde6a",
        "title": "html页面测试",
        "fullFile": "D:\\myphp_www\\PHPTutorial\\WWW\\nodejs\\dist\\service\\html.spec.js",
        "file": "\\dist\\service\\html.spec.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "index－>create",
            "fullTitle": "html页面测试 index－>create",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "rize.goto(`${host}`) // 输入网址跳转\n// .assertSee('书籍名称') // 断言是否有指定内容\n.clickLink('入库新书') // 点击指定按钮（内容）\n.waitForNavigation() // 等待跳转,因为是搜索会跳到结果页面\n.findAll('button', 1, rize.assertClassHas, 'create_btn') // css选择器[button所有的选中第一个]，断言是否有指定class\n.type('input#book_name', 'size测试书籍') // 查找指定input在输入内容\n.type('input#author', 'size作者').type('input#book_img', 'www.j.com/1.jpg').assertTitle('z图书管理系统') // 断言标题\n.assertSee('size测试书籍') // 断言是否有指定内容\n.end();",
            "err": {},
            "isRoot": false,
            "uuid": "5b8c9c50-28ad-4246-b76c-872c1b84037c",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "5b8c9c50-28ad-4246-b76c-872c1b84037c"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2018
}